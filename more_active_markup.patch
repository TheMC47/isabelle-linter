Index: src/Pure/PIDE/markup.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Pure/PIDE/markup.scala b/src/Pure/PIDE/markup.scala
--- a/src/Pure/PIDE/markup.scala	(revision 74475:8e9f38240c05ecd579421f078c60e152f15b9260)
+++ b/src/Pure/PIDE/markup.scala	(revision 74475+:8e9f38240c05+)
@@ -624,6 +624,7 @@
   val Result = new Properties.String(RESULT)
 
   val JEDIT_ACTION = "jedit_action"
+  val GOTO_POSITION = "goto_position"
 
 
   /* protocol message functions */
Index: src/Pure/PIDE/rendering.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Pure/PIDE/rendering.scala b/src/Pure/PIDE/rendering.scala
--- a/src/Pure/PIDE/rendering.scala	(revision 74475:8e9f38240c05ecd579421f078c60e152f15b9260)
+++ b/src/Pure/PIDE/rendering.scala	(revision 74475+:8e9f38240c05+)
@@ -219,7 +219,7 @@
 
   val active_elements =
     Markup.Elements(Markup.DIALOG, Markup.BROWSER, Markup.GRAPHVIEW, Markup.THEORY_EXPORTS,
-      Markup.SENDBACK, Markup.JEDIT_ACTION, Markup.SIMP_TRACE_PANEL)
+      Markup.SENDBACK, Markup.JEDIT_ACTION, Markup.GOTO_POSITION, Markup.SIMP_TRACE_PANEL)
 
   val background_elements =
     Document_Status.Command_Status.proper_elements + Markup.WRITELN_MESSAGE +
Index: src/Tools/jEdit/src/active.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Tools/jEdit/src/active.scala b/src/Tools/jEdit/src/active.scala
--- a/src/Tools/jEdit/src/active.scala	(revision 74475:8e9f38240c05ecd579421f078c60e152f15b9260)
+++ b/src/Tools/jEdit/src/active.scala	(revision 74475+:8e9f38240c05+)
@@ -72,6 +72,11 @@
           }
           true
 
+        case XML.Elem(Markup(Markup.GOTO_POSITION, pos), _) =>
+          val link = PIDE.editor.hyperlink_position(true, snapshot, pos)
+          GUI_Thread.later { link.foreach(_.follow(view)) }
+          true
+
         case XML.Elem(Markup(Markup.SIMP_TRACE_PANEL, props), _) =>
           val link =
             props match {
@@ -90,6 +95,8 @@
               case Position.Id(id) =>
                 Isabelle.edit_command(snapshot, text_area,
                   props.contains(Markup.PADDING_COMMAND), id, text)
+              case Position.Range(range) =>
+                Isabelle.replace_range(snapshot, text_area, range, text)
               case _ =>
                 if (props.contains(Markup.PADDING_LINE))
                   Isabelle.insert_line_padding(text_area, text)
Index: src/Tools/jEdit/src/isabelle.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Tools/jEdit/src/isabelle.scala b/src/Tools/jEdit/src/isabelle.scala
--- a/src/Tools/jEdit/src/isabelle.scala	(revision 74475:8e9f38240c05ecd579421f078c60e152f15b9260)
+++ b/src/Tools/jEdit/src/isabelle.scala	(revision 74475+:8e9f38240c05+)
@@ -342,6 +342,22 @@
     }
   }
 
+  def replace_range(
+    snapshot: Document.Snapshot,
+    text_area: TextArea,
+    range: Symbol.Range,
+    text: String): Unit =
+  {
+    val buffer = text_area.getBuffer
+    if (!snapshot.is_outdated && text != "") {
+      JEdit_Lib.buffer_edit(buffer) {
+        buffer.remove(range.start, range.length)
+        text_area.moveCaretPosition(range.start)
+        text_area.setSelectedText(text)
+      }
+    }
+  }
+
   def edit_command(
     snapshot: Document.Snapshot,
     text_area: TextArea,
